@import url('https://fonts.googleapis.com/css2?family=Noto+Sans:ital,wght@0,100..900;1,100..900&family=Raleway:ital,wght@0,100..900;1,100..900&display=swap');

*{ box-sizing: border-box; }

:root {
    --cor-titulo: #4d4d4d;
    --cor-texto: #333;
    --cor-escura: #000;
    --cor-clara: #fff;
    --cor-intermediaria: #ececec;
}

/* como boas prática, bom deixar o font-size da raiz, ie., do html enfatizado no código, para lembrar de alterar por ele, nas variações de tamanho/ responsividade na Medias Queries */
html { font-size: 16px; }

body {
    color: var(--cor-texto);
    font-family: "Noto Sans", sans-serif;
    background-color: var(--cor-clara);
}

body, h1, h2, p, figure, nav ul {
    margin: 0;
    padding: 0;
}

img { max-width: 100%; }
/* importante para não dar barra de rolagem; ie, as imagens ficam variando do seu tamanho para poder estar dentro do enquadramento da tela dos tipos de dispositivos sem ter que aparecer a barra de rolagem */

a { text-decoration: none; }

h1 {
    font-family: Raleway, sans-serif;
    text-transform: uppercase;
    /* se não conseguir usar bold, então usa as intensidades que a fonte oferece, neste caso, para essa fonte, vai de weight 0 a 900, aí o titulo h1 fica mais ou menos preto "intenso" */
    font-weight: 800;
    font-size: 1.5rem;
}

h1 a {
    color: var(--cor-clara);
    background-color: var(--cor-escura);
    padding: 0.3rem 1rem ; /* primeiro valor é top e bottom, o segundo valor é left e right */
    border-radius: 4px;
}

header {
    height: 12vh;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

nav h2 a {
    color: var(--cor-escura);
    font-size: 1.2rem;
    /* background-color: yellow; usar cores gritantes para ver a área do conteudo/caixa, e podermos ajustar melhor as distancias de padding e/ou talvez margin também. */
    padding: 1rem;
    display: inline-block; /* bom usar este valor inline-block com o padding, fica mais bonito */
}

/* usando seletores agrupado e pseudo-classe */
nav h2 a:hover, nav h2 a:focus, .links-menu a:hover, .links-menu a:focus {
    background-color: var(--cor-intermediaria);
}

/* Estilos para a lista ul contida na nav */
.links-menu {
    list-style: none;
    /* Atenção: Neste ponto, fazemos com que os links do menu iniciem escondidos (display: none). Posteriormente, com a ajuda do CSS combinado com o JS, faremos os controles para exibir/esconder de forma alternada. */
    display: none;
    /* escondemos a lista de links do menu */
}

/* Estilos para os links contidos na ul dentro do nav  */
.links-menu a {
    color: var(--cor-escura);
    font-weight: bold;
    display: flex;
    height: 50px;
    /* background-color: yellow; teste para ver auxiliar no posicionamento do conteudo/box */
    justify-content: center;
    align-items: center;
}

/* Regra que será aplicada somente quando o menu for acionado para abertura */
.links-menu.aberto {
    /* Ativando o flex fazemos com que os links voltem a aparecer. */
    display: flex;

    /* Fazemos com que eles fiquem um em cima do outro (flex coluna) */
    flex-direction: column;

    /* Ativamos position: absolute e ajustamos a posição final dos links usando propriedades de coordenadas. */
    position: absolute;
    /* position é importante para poder jogar os elemetos para qualquer lugar do site, ele está totalmente ATRELADO ao left e ao right, e/ou ainda para top ou bottom, dependendo do site e do tipo de layout que está elaborando. */
    left: 0;
    right: 0;
    background-color: var(--cor-clara);
}

.destaque{
    height: 88vh;
    /* ../ funciona mesmo fora de um servidor
    só a barra / só vai funcionar no servidor */
    background-image: url(../imagens/fundo-destaque.jpg);
    /* background-attachment deixa a imagem de fundo no modo fixed, fixado, sem ficar andando junto com o rolar da página. VISUALMENTE, opnião própria, deixa o layout de uma página mais bonito. VISUALMENTE, o texto que está acima dele, fica flutuando sobre esse fundo fixado. */
    background-attachment: fixed;
    display: flex;
    flex-direction: column; /* funciona como alinhamento vertical, colocando o p debaixo do h2 */
    justify-content: center;
    align-items: center; /* funciona como alinhamento horizontal */
}
/* Versão 2: regras específicas para o h2 e para o p contidos em destaque, poderiamos deixar  */
.destaque h2, .destaque p{
    text-align: center;
    color: var(--cor-clara);
}

/*  
    Exercicios
1) Crie uma regra CSS para formatar o destaque com as seguintes configurações:

- Altura 500px
- Imagem de fundo (fundo-destaque)
- Imagem de fundo deve ficar parada
- Flex com alinhamento totalmente centralizado, e um elemento em cima do outro (ou seja, use o modo coluna)

2) Crie uma regra CSS para formatar o h2 e o p contidos em Destaque. Faça com que os textos fiquem centralizados (text-align) e com cor clara.

 */

 /* FONTES RESPONSIVAS: clamp() 
 clamp( tamanhoMínimo, tamanhoIdeal/Variável/Responsivo, tamamnhoMáximo )
 */

 .destaque h2 {
    font-size: clamp(3rem,10vw,7rem);
 }
.destaque p {
    font-size: clamp(1.5rem,4vw,3rem);   
}